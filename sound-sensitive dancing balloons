import processing.sound.*;
Amplitude amp;
AudioIn in;

ArrayList<Particle> particles = new ArrayList<Particle>();


  
void setup() {
  
size(1000,600);
smooth();
frameRate(50);
  amp = new Amplitude(this);
  in = new AudioIn(this, 0);
  in.start();
  amp.input(in);
}


void draw() {

  
background(0);
float s = random(20,80);
particles.add(new Particle()); 

for (int i = 0; i < particles.size(); i++ ) { 
Particle p = particles.get(i);
p.run();
p.display(s);
}
while (particles.size() > amp.analyze()*5) {
particles.remove(0); 
}
}


class Particle {
float x;
float y;
float xspeed;
float yspeed;
float t = random(0,255);

Particle() {
x = random(width/2-200,width/2+300);
y = random(height/2-100,height/2+100);
xspeed = random(-amp.analyze()*10,amp.analyze()*10);
yspeed = random(-amp.analyze()*10,amp.analyze()*10);
}

void run() {
x = x + xspeed;
y = y + yspeed;
}


void display(float a) {
noStroke();
fill(255-amp.analyze()*20,random(200,255-amp.analyze()*30),random(amp.analyze()*180,250), 220-amp.analyze()*50);
ellipse(x,y,a,a);
}
}
